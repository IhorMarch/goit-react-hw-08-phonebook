{"version":3,"file":"static/js/991.dce88234.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const List = styled.ul`\n\n\n  padding: 10px;\nmargin-left:auto;\nmargin-right:auto;\nwidth: 400px;\n  font-size: 20px;\n`;\n\nexport const Item = styled.li`\n\n\n  padding: 10px;\n  width: 380px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 0;\n`;\n\n\nexport const Text = styled.p`\n   flex-grow: 1;\n`;\nexport const Button = styled.button`\n   display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #f44336;\n\n&:hover,\n  &:focus {\n\n    background-color: #e2e5e8;\n  }\n\n\n\n\n`;\n\n\n","import { useDispatch } from \"react-redux\";\nimport { MdClose } from \"react-icons/md\";\n\nimport { Wrapper,Text, Button} from './Contact.styled';\nimport { deleteContact } from \"../../redux/operations\";\n\n\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n\n  return (\n    <Wrapper >\n    <Text> {contact.name + ' : ' + contact.number}</Text>\n      <Button onClick={handleDelete}>\n        <MdClose size={24} />\n      </Button>\n    </Wrapper>\n  );\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectVisibleContacts = createSelector(\n[selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => { \n \n\n    const normalizedFilter = statusFilter.toLowerCase();\n\n    return contacts.filter(contact => \n      contact.name.toLowerCase().includes(normalizedFilter)\n      );\n\n  });\n\n","import { List,Item } from './ContactList.styled';\n// Импортируем хук\nimport { useSelector } from \"react-redux\";\nimport { Contact } from '../Contact/Contact';\nimport { selectVisibleContacts} from \"../../redux/selectors\";\n \n\n \n\nexport const ContactList = () => {\n  \n// Получаем массив задач из состояния Redux\n \n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  \n// Вычисляем массив задач которые необходимо отображать в интерфейсе\n\n  return (\n    \n     <List>\n    {visibleContacts.map(contact => (\n      <Item key={contact.id}>\n         <Contact contact={contact} />\n      </Item>\n    \n    ))}\n    </List>\n  )\n\n\n\n}\n  \n \n \n  \n\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  margin:auto;\n  border: 3px solid ;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  width: 300px;\n  margin:auto;\n  text-align:center;\n  border-radius: 4px;\n  border: 3px ;\n\n  font-size: 18px;\n\n&:hover,\n  &:focus {\n\n    background-color: #e2e5e8;\n  }\n\n\n\n`;","\nimport React from 'react';\nimport Notiflix from 'notiflix';\nimport { Form, Label, Button, Input} from './ContactForm.styled';\nimport { addContact } from \"../../redux/operations\";\n// Импортируем хук\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { selectContacts} from \"../../redux/selectors\";\n\n\n\nexport const ContactForm = () => { \n\n   // Получаем ссылку на функцию отправки экшенов\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n      const form = event.target;\n\n        \n    // Вызываем генератор экшена и передаем текст задачи для поля payload\n        // Отправляем результат - экшен создания задачи\n        \n        const newContact = {\n            name:form.elements.name.value,\n            number:form.elements.number.value\n        }\n    const {name} = newContact;\n     if (contacts.find(newContact => newContact.name.toLowerCase() === name.toLowerCase())) {\n      Notiflix.Notify.failure(`${newContact.name} is already in contacts`);\n    }\nelse{ dispatch(addContact(newContact));}\n\n\n     form.reset();\n    }\n   \nreturn (\n            <Form onSubmit={handleSubmit}>\n                <Label>\n                    Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                   \n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    /></Label>\n               \n           <Label>\n             Number\n           <Input\n               type=\"tel\"\n               name=\"number\"\n         \n               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n               title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n               required\n                    />\n                </Label>\n\n\n                <Button type=\"submit\">Add contact</Button>\n            </Form>\n        );\n\n\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Wrapper","Text","Button","_templateObject3","Contact","_ref","contact","dispatch","useDispatch","_jsxs","children","name","number","_jsx","onClick","deleteContact","id","MdClose","size","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","statusFilter","normalizedFilter","toLowerCase","includes","ContactList","visibleContacts","useSelector","map","Form","Label","Input","_templateObject4","ContactForm","onSubmit","event","preventDefault","form","target","newContact","elements","value","find","Notiflix","concat","addContact","reset","type","pattern","title","required","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}