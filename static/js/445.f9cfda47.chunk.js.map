{"version":3,"file":"static/js/445.f9cfda47.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/Contact/Contact.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/ContactCounter/ContactCounter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const List = styled.ul`\n\ndisplay:flex;\nflex-wrap:wrap;\n  padding: 10px;\nmargin-left:auto;\nmargin-right:auto;\nwidth: 100%;\n  font-size: 20px;\n`;\n\nexport const Item = styled.li`\n\n\n  padding: 10px;\n  width: 380px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;","import { useDispatch } from \"react-redux\";\nimport { deleteContact} from \"../../redux/operations\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n \n  return (\n<Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n  <Grid item xs={12} md={6}>\n          \n      \n            <List >\n             \n                <ListItem\n                  secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete}>\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemAvatar>\n                    <Avatar>\n                      <ContactPhoneIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={contact.name + ' : ' + contact.number}              \n                  />\n                </ListItem>,\n           \n            </List>\n      \n        </Grid>\n</Box>\n\n\n    // <Wrapper >\n     \n    // <Text> {contact.name + ' : ' + contact.number}</Text>\n    //   <Button onClick={handleDelete}>\n    //     <MdClose size={24} />\n    //   </Button>\n    // </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\n\n\n\nexport const SectionWrap = styled.section`\n  margin: 0 auto;\n  width:1200 px;\n`;\n\nexport const SectionTitle = styled.h2`\nmargin-top:20px;\nmargin-bottom:20px;\n  text-align: center;\n  font-size: 36px;\n  letter-spacing: 2px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionWrap, SectionTitle } from './Section.styled';\n\n\nexport const Section = ({ children }) => {\n  return (\n    <SectionWrap>\n      <SectionTitle>Your Contacts</SectionTitle>\n      {children}\n    </SectionWrap>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectVisibleContacts = createSelector(\n[selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => { \n \n\n    const normalizedFilter = statusFilter.toLowerCase();\n\n    return contacts.filter(contact => \n      contact.name.toLowerCase().includes(normalizedFilter)\n      );\n\n  });\n\n\n","import { List,Item } from './ContactList.styled';\n// Импортируем хук\nimport { useSelector } from \"react-redux\";\nimport { Contact } from '../Contact/Contact';\nimport { Section } from '../Section/Section';\nimport { selectVisibleContacts} from \"../../redux/selectors\";\n \n\n \n\nexport const ContactList = () => {\n  \n// Получаем массив задач из состояния Redux\n \n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  \n// Вычисляем массив задач которые необходимо отображать в интерфейсе\n\n  return (\n    <Section>\n     <List>\n    {visibleContacts.map(contact => (\n      <Item key={contact.id}>\n         <Contact contact={contact} />\n      </Item>\n    \n    ))}\n      </List>\n    </Section>\n  )\n\n\n\n}\n  \n \n \n  \n\n","\nimport React from 'react';\nimport Notiflix from 'notiflix';\n// import { Form, Label, Button, Input,Title} from './ContactForm.styled';\nimport { addContact } from \"../../redux/operations\";\n// Импортируем хук\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { selectContacts} from \"../../redux/selectors\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport PermContactCalendarSharpIcon from '@mui/icons-material/PermContactCalendarSharp';\nconst defaultTheme = createTheme();\nexport const ContactForm = () => { \n\n   // Получаем ссылку на функцию отправки экшенов\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n      const form = event.target;\n\n        \n    // Вызываем генератор экшена и передаем текст задачи для поля payload\n        // Отправляем результат - экшен создания задачи\n        \n        const newContact = {\n            name:form.elements.name.value,\n            number: form.elements.number.value,\n          \n        }\n    const {name} = newContact;\n     if (contacts.find(newContact => newContact.name.toLowerCase() === name.toLowerCase())) {\n      Notiflix.Notify.failure(`${newContact.name} is already in contacts`);\n    }\nelse{ dispatch(addContact(newContact));}\n\n\n     form.reset();\n    }\n   \n    return (\n\n        <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: -17,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <PermContactCalendarSharpIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n          Add Your Contact\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              label=\"Phone\"\n              type=\"tel\"\n              id=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n          \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add Contact\n            </Button>\n        \n          </Box>\n        </Box>\n       \n      </Container>\n    </ThemeProvider>\n                \n        // <Form onSubmit={handleSubmit}>\n        //     <Title>Add Your contact</Title>\n        //         <Label>\n        //             Name\n        //         <Input\n        //             type=\"text\"\n        //             name=\"name\"\n                   \n        //             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        //             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        //             required\n        //             /></Label>\n               \n        //    <Label>\n        //      Number\n        //    <Input\n        //        type=\"tel\"\n        //        name=\"number\"\n         \n        //        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        //        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        //        required\n        //             />\n        //         </Label>\n\n\n        //         <Button type=\"submit\">Add contact</Button>\n        //     </Form>\n        );\n\n\n}\n","import { useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/selectors\";\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport CollectionsSharpIcon from '@mui/icons-material/CollectionsSharp';\nimport Avatar from '@mui/material/Avatar';\nconst defaultTheme = createTheme();\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nexport const ContactCounter = () => {\n  const active = useSelector(selectContacts);\n\n  return (\n\n<ThemeProvider theme={defaultTheme}>\n     \n      <CssBaseline />\n      <Avatar sx={{ mt: 10, bgcolor: 'secondary.main' }}>\n            <CollectionsSharpIcon />\n          </Avatar>\n    <Typography component=\"p\" variant=\"h4\">\n         {active.length}\n      </Typography>\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n        Total contacts\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View all contacts\n        </Link>\n      </div>\n</ThemeProvider>\n\n\n\n    // <div>\n    //   <p >Total contacts: {active.length}</p>\n     \n    // </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nimport { ContactCounter } from '../components//ContactCounter/ContactCounter';\n\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n\n\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactCounter/>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      \n    \n      <ContactList />\n    </>\n  );\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Contact","_ref","contact","dispatch","useDispatch","_jsx","Box","sx","flexGrow","maxWidth","children","Grid","item","xs","md","_jsxs","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","id","DeleteIcon","ListItemAvatar","Avatar","ContactPhoneIcon","ListItemText","primary","name","number","SectionWrap","SectionTitle","Section","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","statusFilter","normalizedFilter","toLowerCase","includes","ContactList","visibleContacts","useSelector","map","defaultTheme","createTheme","ContactForm","ThemeProvider","theme","Container","component","CssBaseline","marginTop","display","flexDirection","alignItems","m","bgcolor","PermContactCalendarSharpIcon","Typography","variant","onSubmit","event","preventDefault","form","target","newContact","elements","value","find","Notiflix","concat","addContact","reset","noValidate","mt","TextField","margin","required","fullWidth","label","pattern","title","autoFocus","type","Button","mb","ContactCounter","active","CollectionsSharpIcon","length","color","flex","Link","href","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}